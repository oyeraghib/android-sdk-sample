apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

dependencies {
    implementation "com.android.support:appcompat-v7:$rootProject.androidSupportLib"
    implementation "com.android.support:design:$rootProject.androidSupportLib"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "com.truecaller.android.sdk:truecaller-sdk:$rootProject.truecallerSdk"

    testImplementation "junit:junit:$rootProject.junit"
}

androidGitVersion {
    codeFormat 'MMNNP'
    format '%tag%%-count%'
    hideBranches = ['master']
    prefix 'v'
}

android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.truecaller.android.sdksample"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionName androidGitVersion.name()
        versionCode androidGitVersion.code()
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    lintOptions {
        abortOnError false
    }

    flavorDimensions 'partnerKey'
//    no need to assign each, since only one dimension is used
    productFlavors {
        dark {
            applicationId 'com.truecaller.sdksample2'
        }
        light {
            // uses defaultConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            rootProject.renameApk(variant, output)
        }

    }

    signingConfigs {

        debug {
            storeFile file("signings/debug.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    mavenCentral()
}